@using CRM.Domain.Entities
@model CRM.Domain.Entities.Student

@{
    ViewData["Title"] = "Student Details";
    Activity activityDisplay = new Activity();
    Application applicationDisplay = new Application();
    VisaApplication visaDisplay = new VisaApplication();
    Enrollment enrollmentDisplay = new Enrollment();
}

@section SideBar {
    <li class="sidebar-info">
        <div class="panel panel-primary" style="margin:5px;">
            <div class="panel-heading">
                <span class="h4"><i class="fa fa-info-circle fa-fw" aria-hidden="true"></i> Message</span>
            </div>
            <div class="panel-body">
                <vc:activity-info query-code="customer" reference-id="@Model.CustomerID">
                </vc:activity-info>
                <vc:record-info created-by="@Model.CreatedBy" modified-by="@Model.ModifiedBy"
                                created-time="@Model.CreatedTime" modified-time="@Model.ModifiedTime">
                </vc:record-info>
            </div>
        </div>
    </li>
}
<div class="panel panel-info" style="margin-top:5px;">
    <div class="panel-heading">
        <form id="confirmForm" asp-action="Delete" asp-route-id="@Model.CustomerID">
            <div class="btn-group pull-right">
                <a style="margin-left:10px;margin-right:10px;" class="btn btn-sm btn-success" asp-action="Edit" asp-route-id="@Model.CustomerID"><i class="fa fa-fw fa-pencil"></i>Edit</a>
                <a asp-action="Index" class="btn btn-sm btn-info"><i class="fa fa-fw fa-reply"></i>List</a>
                <a id="deleteButton" href="#" onclick="deleteStudent()" class="btn btn-sm btn-danger" style="margin-left:10px;"><i class="fa fa-fw fa-remove"></i>Delete</a>
            </div>
            <p style="font-size:18px; margin-top:0px; margin-bottom:0px;">@ViewData["Title"] </p>
        </form>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="columns col-md-6 crm-style">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.PreferName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PreferName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Gender)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Gender)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Birthdate)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Birthdate)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Rating)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Rating)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Nationality)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Nationality)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.PassportNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PassportNumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ClientNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ClientNumber)
                    </dd>
                </dl>
            </div>
            <div class="columns col-md-6 crm-style">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.ContactName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ContactName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.AcademicBackground)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.AcademicBackground)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.EMail)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.EMail)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Mobile)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Mobile)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Address)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Address)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Note)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Note)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CustomerOwnerID)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.CustomerOwner.UserName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Agent)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Agent.Name)
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="well well-sm warning" style="margin:0px;">
    <form asp-area="" asp-controller="Activities" asp-action="Create" method="get" id="toolFormOpenActivity">
        <span class="h4">Open Activities</span>&nbsp;&nbsp;
        <button type="submit" class="hidden btn btn-sm btn-success pull-right">
            <i class="glyphicon glyphicon-plus"></i> Create
        </button>
    </form>
</div>
<table id="openActivitiesTable"></table>

<div class="well well-sm success" style="margin:0px;">
    <form asp-area="" asp-controller="Activities" asp-action="Create" method="get" id="toolFormClosedActivity">
        <span class="h4">Closed Activities</span>&nbsp;&nbsp;
        <button type="submit" class="hidden btn btn-sm btn-success pull-right">
            <i class="glyphicon glyphicon-plus"></i> Create
        </button>
    </form>
</div>
<table id="closedActivitiesTable"></table>

<div class="well well-sm info" style="margin:0px; margin-top:10px;">
    <form asp-area="" asp-controller="Applications" asp-action="Create" method="get" id="toolFormApplication">
        <span class="h4">Applications</span>&nbsp;&nbsp;
        <button type="submit" class="hidden btn btn-sm btn-success pull-right">
            <i class="glyphicon glyphicon-plus"></i> Create
        </button>
    </form>
</div>

<table id="applicationsTable"></table>

<div class="well well-sm info" style="margin:0px; margin-top:10px;">
    <form asp-area="" asp-controller="VisaApplications" asp-action="Create" method="get" id="toolFormVisa">
        <span class="h4">Visa Applications</span>&nbsp;&nbsp;
        <button type="submit" class="hidden btn btn-sm btn-success pull-right">
            <i class="glyphicon glyphicon-plus"></i> Create
        </button>
    </form>
</div>
<table id="visaTable"></table>

<div class="well well-sm info" style="margin:0px; margin-top:10px;">
    <form asp-area="" asp-controller="Enrollments" asp-action="Create" method="get" id="toolFormEnrollment">
        <span class="h4">Enrollments</span>&nbsp;&nbsp;
        <button type="submit" class="hidden btn btn-sm btn-success pull-right">
            <i class="glyphicon glyphicon-plus"></i> Create
        </button>
    </form>
</div>
<table id="enrollmentsTable"></table>

    @section Scripts {
        <script>
            $("#crm-students").addClass('active');
            function deleteStudent() {
                if (confirm("Are you sure to delete the Student? All activites will be deleted as well.")) {
                    $("#confirmForm").submit();
                }
            };

            $table = $("#openActivitiesTable");
            $table.bootstrapTable({
                url: "/api/activities/student/@Model.CustomerID/open",
                    height: 300,
                    clickToSelect: true,
                    sidePagination: 'client',
                    queryParamType: "",
                    pagination: true,
                    //toolbar: "#toolForm",
                    idField: "activityID",
                    columns: [{
                        field: 'state',
                        title: '',
                        radio: true,
                    }, {
                        field: 'customerID',
                        title: 'Customer ID',
                        visible: false
                    }, {
                        field: 'activityType',
                        title: '@Html.DisplayNameFor(model => activityDisplay.ActivityType)',
                        formatter: CRM.convertActivityType,
                    }, {
                        field: 'status',
                        title: '@Html.DisplayNameFor(model => activityDisplay.Status)',
                        formatter: CRM.convertActivityStatus,
                    }, {
                        field: 'subject',
                        title: '@Html.DisplayNameFor(model => activityDisplay.Subject)',
                    }, {
                        field: 'activityOwner.userName',
                        title: 'Activity Owner',
                    }, {
                        field: 'startTime',
                        title: '@Html.DisplayNameFor(model => activityDisplay.StartTime)',
                        formatter: CRM.formatDatetime,
                    }, {
                        field: 'endTime',
                        title: '@Html.DisplayNameFor(model => activityDisplay.EndTime)',
                        formatter: CRM.formatDatetime,
                    },]
                });
            //Onclick jump to detail page
            $table.on('check.bs.table', function (e, row) {
                window.location.href = "/Activities/Details/" + row["activityID"].toString().trim();
            });

            $table = $("#closedActivitiesTable");
            $table.bootstrapTable({
                url: "/api/activities/student/@Model.CustomerID/closed",
                    height: 300,
                    clickToSelect: true,
                    sidePagination: 'client',
                    queryParamType: "",
                    pagination: true,
                    //toolbar: "#toolForm",
                    idField: "activityID",
                    columns: [{
                        field: 'state',
                        title: '',
                        radio: true,
                    }, {
                        field: 'customerID',
                        title: 'Customer ID',
                        visible: false
                    }, {
                        field: 'activityType',
                        title: '@Html.DisplayNameFor(model => activityDisplay.ActivityType)',
                        formatter: CRM.convertActivityType,
                    }, {
                        field: 'status',
                        title: '@Html.DisplayNameFor(model => activityDisplay.Status)',
                        formatter: CRM.convertActivityStatus,
                    }, {
                        field: 'subject',
                        title: '@Html.DisplayNameFor(model => activityDisplay.Subject)',
                    }, {
                        field: 'activityOwner.userName',
                        title: 'Activity Owner',
                    }, {
                        field: 'startTime',
                        title: '@Html.DisplayNameFor(model => activityDisplay.StartTime)',
                        formatter: CRM.formatDatetime,
                    }, {
                        field: 'endTime',
                        title: '@Html.DisplayNameFor(model => activityDisplay.EndTime)',
                        formatter: CRM.formatDatetime,
                    },]
            });
            //Onclick jump to detail page
            $table.on('check.bs.table', function (e, row) {
                window.location.href = "/Activities/Details/" + row["activityID"].toString().trim();
            });

        $table = $("#applicationsTable");
        $table.bootstrapTable({
                url: "/api/applications/student/@Model.CustomerID ",
                height: 250,
                clickToSelect: true,
                sidePagination: 'client',
                pagination: true,
                //toolbar: "#toolForm",
                idField: "applicationID",
                columns: [{
                    field: 'state',
                    title: '',
                    radio: true,
                }, {
                    field: 'applicationID',
                    title: 'applicationID',
                    visible: false
                }, {
                    field: 'institute.name',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.InstituteID)',
                }, {
                    field: 'status',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.Status)',
                    formatter: CRM.convertApplicationStatus,
                }, {
                    field: 'tuition',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.Tuition)',
                }, {
                    field: 'note',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.Note)',
                }, {
                    field: 'submittedDate',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.SubmittedDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'createdTime',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.CreatedTime)',
                    formatter: CRM.formatDatetime,
                }, {
                    field: 'modifiedTime',
                    title: '@Html.DisplayNameFor(model => applicationDisplay.ModifiedTime)',
                    formatter: CRM.formatDatetime,
                },]
            });
            //Onclick jump to detail page
            $table.on('check.bs.table', function (e, row) {
                window.location.href = "/Applications/Details/" + row["applicationID"].toString().trim();
            });

            $table = $("#visaTable");
        $table.bootstrapTable({
                url: "/api/VisaApplications/student/@Model.CustomerID ",
                height: 250,
                clickToSelect: true,
                sidePagination: 'client',
                pagination: true,
                //toolbar: "#toolForm",
                idField: "visaApplicationID",
                columns: [{
                    field: 'state',
                    title: '',
                    radio: true,
                }, {
                    field: 'visaApplicationID',
                    title: 'visaApplicationID',
                    visible: false
                }, {
                    field: 'institute.name',
                    title: '@Html.DisplayNameFor(model => visaDisplay.InstituteID)',
                }, {
                    field: 'visaAppliedType',
                    title: 'Visa Type',
                }, {
                    field: 'submittedDate',
                    title: '@Html.DisplayNameFor(model => visaDisplay.SubmittedDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'receivedDate',
                    title: '@Html.DisplayNameFor(model => visaDisplay.ReceivedDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'expiredDate',
                    title: '@Html.DisplayNameFor(model => visaDisplay.ExpiredDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'note',
                    title: '@Html.DisplayNameFor(model => visaDisplay.Note)',
                },]
            });
            //Onclick jump to detail page
            $table.on('check.bs.table', function (e, row) {
                window.location.href = "/VisaApplications/Details/" + row["visaApplicationID"].toString().trim();
            });


        $table = $("#enrollmentsTable");
        $table.bootstrapTable({
            url: "/api/enrollments/student/@Model.CustomerID",
                height: 250,
                clickToSelect: true,
                sidePagination: 'client',
                pagination: true,
                //toolbar: "#toolForm",
                idField: "enrollmentID",
                columns: [{
                    field: 'state',
                    title: '',
                    radio: true,
                }, {
                    field: 'enrollmentID',
                    title: 'enrollmentID',
                    visible: false
                }, {
                    field: 'institute.name',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.InstituteID)',
                }, {
                    field: 'paymentDate',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.PaymentDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'dueDate',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.DueDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'endDate',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.EndDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'tuition',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.Tuition)',
                }, {
                    field: 'status',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.Status)',
                    formatter: CRM.convertEnrollmentStatus,
                }, {
                    field: 'createdTime',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.CreatedTime)',
                    formatter: CRM.formatDatetime,
                }, {
                    field: 'modifiedTime',
                    title: '@Html.DisplayNameFor(model => enrollmentDisplay.ModifiedTime)',
                    formatter: CRM.formatDatetime,
                },]
            });
            //Onclick jump to detail page
            $table.on('check.bs.table', function (e, row) {
                window.location.href = "/Enrollments/Details/" + row["enrollmentID"].toString().trim();
            });
        </script>

    }
