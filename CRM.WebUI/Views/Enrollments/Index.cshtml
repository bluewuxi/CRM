@model CRM.WebUI.Models.QuerySettingViewModel

@{
    ViewData["Title"] = "Enrollments List";
    CRM.Domain.Entities.Enrollment fieldDisplay = new CRM.Domain.Entities.Enrollment();
}

@section SideBar {
    <div class="panel panel-primary" style="margin:5px;">
        <div class="panel-heading">
            <i class="fa fa-filter fa-fw" aria-hidden="true"></i> <span class="h4">Filter</span>
        </div>
        <div class="panel-body">
            <form asp-action="SetQuery" method="post">
                <div class="form-actions no-color">
                    @Html.Hidden("search", Newtonsoft.Json.JsonConvert.SerializeObject(Model.search), new { id = "query_search" })
                    <input id="query_sort" type="hidden" name="sort" value="" />
                    <input id="query_offset" type="hidden" name="offset" value="0" />

                    <label for="StudentName">Student Name:</label>
                    <input id="StudentName" class="form-control" placeholder="Student Name" />
                    <br class="divider" />
                    <label for="InstitutName">Institut Name:</label>
                    <input id="InstitutName" class="form-control" placeholder="Institut Name" />
                    <br class="divider" />
                    <button onclick="applyFilter(true)" class="btn btn-info"><i class="fa fa-fw fa-check"></i>Apply</button>&nbsp;&nbsp;
                    <button onclick="applyFilter(false)" class="btn btn-default"><i class="fa fa-fw fa-remove"></i>Clear</button>
                </div>
            </form>
        </div>
    </div>
}




<form asp-area="" asp-controller="Enrollments" asp-action="Create" method="get" id="toolForm">
    <span class="h3">@ViewData["Title"]</span>&nbsp;&nbsp;
    <button type="submit" class="btn btn-success">
        <i class="glyphicon glyphicon-plus"></i> Create
    </button>
</form>
<table id="enrollmentsTable"></table>

@section Scripts
{
    <script>
        restoreFilter();

        $("#crm-enrollments").addClass('active');
        $table = $("#enrollmentsTable");
        $table.bootstrapTable({
            url: "/api/enrollments",
                height: CRM.getHeight(),
                clickToSelect: true,
                sidePagination: 'server',
                pagination: true,
                toolbar: "#toolForm",
                idField: "enrollmentID",
                queryParams: function (Param) { Param.search = $("#query_search").val(); return Param;},
                columns: [{
                    field: 'state',
                    title: '',
                    radio: true,
                }, {
                    field: 'enrollmentID',
                    title: 'enrollmentID',
                    visible: false
                }, {
                    field: 'student.name',
                    title: 'student name',
                }, {
                    field: 'institut.name',
                    title: 'Institut Name',
                }, {
                    field: 'paymentDate',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.PaymentDate)',
                    formatter: CRM.convertAccountType,
                }, {
                    field: 'dueDate',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.DueDate)',
                }, {
                    field: 'endDate',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.EndDate)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'tuition',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.Tuition)',
                }, {
                    field: 'status',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.Status)',
                }, {
                    field: 'createdTime',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.CreatedTime)',
                    formatter: CRM.formatDate,
                }, {
                    field: 'modifiedTime',
                    title: '@Html.DisplayNameFor(model => fieldDisplay.ModifiedTime)',
                    formatter: CRM.formatDate,
                },]
            });

        $table.on('check.bs.table', function () {
            enrollment_onSelect($table.bootstrapTable('getSelections'));
            //$table.bootstrapTable("destory");
        });

        function enrollment_onSelect(eSelect)
        {
            if (eSelect != null) {
                window.location.href = "/Enrollments/Details/"+eSelect[0].customerID.toString().trim();
            }
        }

        function applyFilter(enable) {
            var item = {};
            item.field = "";
            item.value = "";

            if (enable){
                CustomerName = $("#StudentsName").val().trim();
                InstitueName = $("#InstitutName").val().trim();;
                $("#query_search").val(JSON.stringify(
                    [{ field: 'StudentsName', value: CustomerName },
                    { field: 'InstitutName', value: InstitueName }]));
            }
            else {
                $("#query_search").val("");
            }
            $(this).closest('form').submit();
        }

        function restoreFilter() {
            var filter = $("#query_search").val();
            if (filter == null || filter == "") return;
            filter = JSON.parse(filter);
            for (var i = 0, len = filter.length; i < len; i++) {
                if (filter[i] != null) $("#" + filter[i].field).val(filter[i].value);
            }
        }

    </script>
}

